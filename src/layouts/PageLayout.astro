---
import "@styles/global.css";
import BaseHead from "@components/BaseHead.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Drawer from "@components/Drawer.astro";
import { SITE } from "@consts";
import { Toaster } from "sonner";

interface Props {
  title: string;
  description: string;
  colorMode?: "light" | "dark" | "system";
}

const { title, description, colorMode = "system" } = Astro.props;
const urlPath = Astro.url.pathname.split("/").filter(Boolean).join(" ");
const { pathname } = Astro.url;
const isChatPage = pathname === "/chat" || pathname.startsWith("/chat/");

// Determine the class based on colorMode
const getColorModeClass = () => {
  if (colorMode === "dark") return "dark";
  if (colorMode === "light") return "light";
  return ""; // For system preference
};
const environment: string = import.meta.env.MODE;
---

<!doctype html>
<html
  lang="en"
  class:list={[urlPath, getColorModeClass()]}
  data-color-mode={colorMode}
>
  <head>
    <BaseHead title={`${title} | ${SITE.TITLE}`} description={description} />
    <script is:inline define:vars={{ environment, colorMode }}>
      // Set environment and initial color mode
      document.documentElement.dataset.environment = environment;
      document.documentElement.dataset.colorMode = colorMode;
    </script>
  </head>
  <body>
    <Header colorMode={colorMode} />
    <Drawer />
    <main>
      <slot />
    </main>
    {!isChatPage && <Footer />}
    <Toaster
      client:load
      position="bottom-center"
      toastOptions={{
        duration: 5000,
        style: {
          background: "white",
          color: "black",
          border: "1px solid var(--border, rgba(0, 0, 0, 0.1))",
          boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
        },
        className: "!bg-white !text-black dark:!bg-zinc-800 dark:!text-white",
      }}
      richColors={false}
    />
  </body>
</html>
